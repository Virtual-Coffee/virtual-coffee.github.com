Bekah Hawrot Weigel  0:14  
Hello, and welcome to season two, Episode Four of the Virtual Coffee podcast. I'm Bekah, and this is a podcast that features members of the Virtual Coffee community. Virtual Coffee is an intimate group of developers at all stages of their coding journey. And they're here on this podcast sharing their stories and what they've learned. And we're here to share it with you. Here with me today is my co host, Dan.

Dan Ott  0:40  
Thanks, Bekah. Today, we're joined by Debra-Kaye Elliott. Debra-Kaye is a front end developer going through a bootcamp on she's adding a community learning to her learning process. And she's a career changer from the administrative field, and has always wanted to be in tech. And we talked about what it's like to be on the self taught developer journey, which I can tell you is a long one. We talked about imposter syndrome. And also some of the key things that Debra-Kaye has learned along the way.

Bekah Hawrot Weigel  1:10  
We start every episode of the podcast like we start every Virtual Coffee, we introduce ourselves with our name, where we're from what we do, and a random check in question. Today's random checking question is, if you were famous, what would you be famous for? We hope you enjoy this episode.

Bekah Hawrot Weigel  1:35  
Hey, I'm Bekah, I'm a front end developer from a small town in Ohio. And if I could be famous for anything, I think--I like approach this in two ways, like one: like what might be possible or like two: anything? So I really like the superhero, the flash, and so I would like to be famous for being the flash. And,

Dan Ott  2:04  
like the flash specifically, or just very, very fast?

Bekah Hawrot Weigel  2:07  
I don't know. I think I think I would like to be Barry Allen. If but, if I had to do something that is more practical than that, I would want to be the strongest mom in the world. I think I was telling someone earlier today. I like weight lifting, heavy things. So I will be the strongest mom, because that that's realistic too.

Dan Ott  2:38  
Hi, I'm Dan. I'm a front end developer from Lakewood, Ohio. I am not going practical at all. I my first instinct was you know, spaceship flying. So like, like, you know, the the Millennium Falcon or whatever, you know, doing the Kessel Run. I basically like that'd be my famous you know, out Dan. Oh, man. He's thinking he's the fastest you know, spaceship flyer there is so that's that's that's what that's my choice,

Bekah Hawrot Weigel  3:05  
spaceship flyer?

Dan Ott  3:06  
--spaceship pilot I realized flyers are silly way to say. But, you know, so be it. That's what it is: Dan, the spaceship flyer.

Debra-Kaye  3:17  
Hi, I am Debra-Kaye, front end developer from Jamaica. If I was to be famous for anything. Um, my first answer would be like, fiction novels, because I am a sucker for fiction. And I tend to put a book down when I start to read it. And I have a really long book list of books to read. And then my second answer would be I'm so happy to pick a superhero because my favorite superheroes are Captain Marvel and Deadpool. So like if I could combine their two powers into one like that would be because like I'm a little bit obsessed with Deadpool. I don't know why I love Ryan Reynolds. So yeah, so I have two answers for those surprisingly so I'm so happy that it's not, like practical because I always go for superhero and books first.

Dan Ott  4:10  
That's sweet. That's pretty awesome. What are you what are you reading right now?

Debra-Kaye  4:14  
Um, so I'm reading its title-- let me, one sec sorry cuz. Yeah, cuz I am almost halfway, Well, I'm past halfway through the book. And it's by Estella Vasquez Perez in her last name is. And it's a  series. So I'm on the second book. And it's called Dark Serenade. Yeah, so it's Montenegro Book Two dark serenade by Estella Vasquez Perez.

Dan Ott  4:50  
Well you're on Book Two, then you must have like the first.

Debra-Kaye  4:52  
Yes, there's three books so yeah, actually bought this one because the first one was free, I know they knew what to do series first And then see if you like, it sounds like you need to finish series. So two or three now.

Dan Ott  5:05  
That's awesome. Nice. I've gotten into a bad habit of getting the first book of a series on the library or whatever. And then just like the second one isn't available, and I need it and just buy it, or if I can find the set, because I'm just like, Alright, well, I know, I'm just gonna do this with the third one or whatever.

Bekah Hawrot Weigel  5:22  
Yeah, I always make the mistake of waiting for it to come in from the library. And then by the time it comes in, I'm like, what happened in book one?

Debra-Kaye  5:32  
Like, what I've been trying to do now is if I see that the book is a series, after like, decide, okay, I'm either gonna read through the entire series before I take up any other book, or leave that until like the very end, because if I started series, I don't want to be like, okay, read book one, then start something and then forgot what happened in that book, one would have to meet over so Yeah, totally.

Bekah Hawrot Weigel  5:57  
It's a good strategy. Alright, Debra-Kaye, we are super happy to have you here with us today. And we always like to get started with what brought a person to this place in their life. So if you want to give us the Debra-Kaye origin story, we would love to hear it.

Debra-Kaye  6:13  
Oh, I could talk about this all day. Oh, I'm so actually studied information technology. I did my degree in information technology, like seven years ago, eight years ago. Um, because I always like to take always like the web--I taught myselt to use a computer when I was like 16. But just didn't really have any sense of direction and didn't know what development was, I think so just didn't really know how to get into the field. So I studied IT, did a degree and just never got a job in it. Because that is wasn't able to when there was no guidance, no anything. And where I'm from in Jamaica, it's mostly always system admins, network admins, and I dislike hardware. I did not like hardware. But I'll play it with software all day. So I just didn't know what to do, how to get in it. And it always seemed like programming was this rocket science thing that only certain people could do. So I was like, Okay, I don't know what to do with. So I discovered I like design too. So I did like a couple of courses in graphic design. And then I was like, Okay, I'll go to that. But then after a year, I was like, No, I really don't like it as much. I like it, but not as much as I did. And then in 2019, I was like, wait, it's time to be active on Twitter again because I had an account, but just didn't do anything with it. And I kept seeing people talk about this thing. I was like, wait, this is a thing. And then I got the courage to dm somebody and ask them like, how do you go about this? What is it, and they were like, what do you what do you like? And they're announced, like saying like, okay, you could do UX UI. And I was like, Okay, then I went down that rabbit hole of research for months and months and months. And that's an aside to realize, like, oh, but development is a thing. People actually do this. And it can be done. I don't have to go back to university for it. Okay, how do I do this? So I went down the rabbit hole and bookmarked all the courses and enrolled in lots of things that I to this day haven't gotten back to. But when I actually started to realize that there was actually a way a path to actually do it. I was like, Okay, yeah, this is a, this is a side of things to figure out how to do it. But this is the this is what I've been searching for. And when I was always I don't have to know, every single thing. And there are certain things that you should know. But then there are other paths in tech that you really don't need to get into. Like, okay, I can do this. So I'm probably going to need some some help, but it can be done. So that's a long winded we have over the course of several years. Yeah.

Bekah Hawrot Weigel  9:19  
I think that's so great. And I think that so many of us, like, I know, I've been down that rabbit hole a number of times, right? And there is so much out there to try and figure out like what everybody will say like, Well, what do you like doing? And sometimes you don't even know what you like doing because you don't know what's available and

Debra-Kaye  9:37  
And sometimes it's more than one thing too.

Dan Ott  9:40  
Yeah, for sure.

Bekah Hawrot Weigel  9:42  
Yeah. And figuring out how those work together. I think it's really great that you dm somebody and ask for help because I think that can be a struggle just to get to that place and to know that you know you were willing to put yourself out there is such a great first step.

Debra-Kaye  9:57  
Yeah, and funny thing too when I did that  I DM is this guy that I have been following for a while on Twitter, but he is a, I think he's a Ruby on Rails developer, if I'm not mistaken. And he has been doing it for like, over 10 years because he like taught himself. And he, I sent him this long message. And I was like, you know, and he'll never see this, and he'll never respond. And he actually responded, I was like, Oh, my god. And he's like, yeah, you can do this, just like, Look, look into this avenue, since you like design. And I was like, Oh, my god, somebody responded, and from him telling me that you can do it. And he was also self taught, I was like, Oh, my god, it's actually a thing. Like, there's actually some kind of path here, some kind of Avenue, there's a way to actually get into this field, because I always wanted to be in tech, but I just never got an opportunity to. And actually, for someone to actually who's been doing it for a while, and encouraging people to get into tech and tell you that, hey, it can be done. There's actually a way they seem to figure out what works for you. But it can be done. So that was really cool.

Dan Ott  11:17  
I love that. I was wondering like how he said, find out which ways work for you. So what have you found to be the most like personally useful, you know, tools to learn other courses or tutorials? Or, you know, what kind of what kind of strategies, or have you been using?

Debra-Kaye  11:34  
I have been in--No, I won't, I won't say another tutoria hell- I'm not saying tutorial hell. But I, when I started, I was enrolling in every free course that I could find. Because you know, there's a treehouse, and there's Udemy. And there's everything. So I have like a bookmark folder full of courses that I could sign up for. And then I signed up for a bunch of Udemy courses, never took them, but like I signed up for them. And then I bought like one or two Udemy courses, that recommended ones. And I still haven't gotten to those that I bought yet. And then I started a Free Code Camp. And then I was doing I'm currently doing front end masters. And then I was like 10 attorneys do two three at the same time. And it took me like, four months to realize that Okay, one of them is not sticking with information. And it just wasn't understanding. And it's like, okay, trying to juggle too many courses at the same time. They're all the basically the fundamentals of HTML, CSS, I haven't gotten to JavaScript yet. But I was trying to like balance. What I was learning from one boot camp, to what I was doing with the other I was like, wait, but they didn't show me this one in this boot camp. So this doesn't make sense. And I had to just decide like, okay, pick one. Job, the others, try to finish this one, and then maybe pick up another one afterwards. So I was, so I mainly use some front end masters, and of course, YouTube. And I haven't even gotten to the Udemy ones yet. But I have like, one boot camp with me because I did buy the cold Steel's boot camp last year, but I still haven't gotten to it yet. So main sources, front end masters. Free Code Camp here for some little things like piece of code that I know that I honestly better than and Udemy and YouTube.  Yeah. Those are the main ones.

Bekah Hawrot Weigel  13:44  
I think it can be super hard as you're trying to figure that out, too. Right? Like you're seeing there can be conflicting material or one teaches one approach. And there's, it just makes it really hard to kind of learn. But also, if you can find something that's good, I was doing a boot camp before I went to flat iron that I just dreaded opening up every morning. Because the material was just so hard for me. It was a lot of videos, and I struggle with videos. And they just kept trying to make jokes in the videos. And I was so frustrated with it. Like just just tell me what I need to do. And then just deciding I'm not doing this, it's not worth it. If it's gonna make me frustrated and hate what I'm doing, then I need to find something better. And that works for me. And so I think that sometimes exactly what you did is a good path, like look at these things, and then kind of figure out what you need to focus on.

Debra-Kaye  14:42  
Yeah, and the funny thing is like I was doing and granted, granted. Free Code Camp is a great resource, like that's the first thing I tell everybody to go to. And like for the first like couple sections. I was like okay, yeah, I understand this, but I got like, half Through CSS, and I was like, I don't know what I'm doing. And it will say things like, you know, remember so and so I was like, I would have to literally go back to that read the thing again, do the little exercise again, because I just wasn't getting it. And then I kept switching between that and something else. And that's important in frontend masters. I was like, I need to pick one. And when I started frontend Masters again, for like, the third time, I was like, Oh, wait, this makes sense. No. And it took me like partway through to realize that I wasn't learning inline CSS for one boot camp, and external CSS for the other one. And that's why it wasn't clicking. Because I despise inline CSS, like, I just don't read the code. I was like, I don't know what this is saying. But it is the external stylesheet what I can see everything like, lined up. I was like, oh, and that's when he starts to click. And I was like, okay, yep, jump in this one for now, because I don't understand anything here. And let me go do this one, because I understand this one better. And I also like, boot camps or tutorials where you get like little exercises to do on your own. And you actually have to write the code or to yourself, that you have to type it from beginning from your h1, and you have to like everything on your own, because it helps us do better than when a tutorial gives you a part of the code. And you have to like change a little one lane or a little change a color. So for me, it worked better, where I had to, like, type everything out myself, because it helped it stick out.

Dan Ott  16:40  
Yeah, I'm the same way I am. I don't know, I don't ever remember anything from like reading or watching videos or anything like that until I until I can actually, you know, write it or apply it or whatever. Whether it's exercise, you know, at the end of a course, or, you know, actually trying to do a project that uses whatever I learned that kind of thing. For me, that is always it's always a way to make it actually stick in my brain and if I'm going to be honest, to actually understand it, you know, I'll sit there not through a video or a talk or something, and I won't ever if somebody asked me a question at the end, I'd be like, I'm not really sure. Until I, it's I sit there and use it, you know? And I'm like, okay, yes, yeah.

Debra-Kaye  17:23  
Yeah, and one of the things that I found that work for me too, is like, shorter videos, because there are some tutorials that are like, an hour long, four hours long, like 20 hours, this and you know, and I, like I can't, my attention span is like really short. So like, with the front end masters videos, they're all like really short, like a minute, four minutes, five minutes. But for me watching a video is actually like, the instructor will say one thing and be like, to do this, you do this, and I hit pause, and I'll just start to try to do it. So for me watching a video is like me spending two hours trying to get through one video, because I will just hit pause and try to do it, and rewind and try it again. So a one hour video for me could probably take like, I don't know, five hours because I don't like to make plays through I will just, stop trying to do it. Didn't get that. Okay, and then play it again. Try to do it. Yeah.

Bekah Hawrot Weigel  18:26  
I think that's a really great point. Like you just said, a one hour video can take me five hours, right? Because sometimes when you're learning something, you think like, Okay, well, I'm gonna sit here for an hour, I have an hour. But that's not practical application of what you're learning. And so as you're going through those things, actually doing them, it's going to take more time, but you're going to learn more in the long run. And so thinking about it like that, in terms of I remember when I was in boot camp, I had maybe complain that it wasn't clear how long each lesson was going to take or exercise. And then somebody responded, and they said, Well, you know, part of it is learning how long it is going to take you because it will be different for everyone else. And that was a lesson that didn't really click with me until later. But, you know, depending on where you're at, and how you approach it, and how much you've taken and understood from the previous lessons, it's going to affect how long that thing is going to take you. And don't judge yourself based on how long it takes you judge how much progress you've made and think about like how much you've learned through doing that. It's not it's not a race, right?

Debra-Kaye  19:42  
And something that you also realize, too, there are some things that even though you've done it to through the video, so you may you know, stop and code it. There's some things that you just can't remember to do. Or something that you kind of can't figure out why it's not working but they didn't Realize that you didn't do something or you missed something in the code. And then there are other things that you'd have to think about you just type it because it's just there in your brain and some things just don't stick.

Dan Ott  20:12  
Yeah, yeah. And that's, I mean, that's like part of learning how to code, right? You know, and trying to do that, while you're watching a video, watching it in the middle of an hour long video seems challenging, the best as egghead has their courses. So it's like a course on a topic, but it's a series of, you know, of short videos, like you're saying, you know, and so they have like broken up, you know, built in pauses. So it's like, one, you're gonna learn and like a large thing, and it's how, you know, an hour long, an hour's worth of content, but you just see that it's broken up. This is like, a minute and a half chapter or whatever it is, whatever they call it, but I like the way that they they organize that because they kind of realize that nobody is going to really learn anything sitting, consuming for an hour, you know? or not, I shouldn't say nobody. But you know, it's, it's probably challenging for a lot of people to do that. Do it that way.

Debra-Kaye  21:09  
And then some things you will still have to Google. Oh, yeah. Because some things you just can't remember.

Dan Ott  21:17  
on that, that's also always true. I don't know, I've been you know, I've been a developer for for a while now. And I google that mean, I google things every, every day as that I don't know, multiple times a day, if you know, if I'm going, I can't, I can't recover. There's one. There's like an array method that just a JavaScript thing. That is just like been the same for 100 years. And I, I literally just can't remember the order of you know how things go in. I look it up every single time. I don't know, I don't know what it is mental block, but that Google is top top developer tool.

Bekah Hawrot Weigel  21:54  
That's, I've been writing my blog with markdown for a couple of years now. And I can never remember the right format for the link. Like I googled it every single time every years, right, and it just wouldn't stick. And then I had tweeted about it. And people like offered me all of these different ways to remember it. And finally one of them clicked and now now I don't have to Google it, the brackets, the brackets come first and the parentheses come second, like a function. I think that's what they were kind of saying, anyway, doesn't matter. It makes sense to me. And now I don't need to give up. But I did for like two years straight. And I think that's kind of part of the other thing, too, right? Like, sometimes you'll be presented the information and somebody, there will be 12 people that give you a different explanation. And that one explanation will fit. And I think there's a tendency for new developers or people who are learning to think about, well, I can't get this in this other person got it. And so I must not be good enough for this, right. And that's not true. It's just not presented in a way that makes sense to your brain or something that's easily usable. But that's why it's great to have so many different people writing blogs or creating content, because there's more options for you to kind of search out and, and figure out what works for you.

Debra-Kaye  23:17  
That took me a while to understand that and took me a while to accept to because I was like I sorted it, this should be easy for me. And I kind of thought going into this that it would be so easy because I did a degree in it. And when I did my degree I did Java and c++. And granted, I didn't understand a thing in Java. Like, I just couldn't get it. I mean that I had to get so much help with that course. And I did. c++, did discrete maths and started thinking called I can't remember the name of the other course. And I was like, Okay, I managed to get through those granted a lot of help because they were just, it wasn't clicking. And my issue was she loved programming. Like she's like a hardcore programmer. And she's like, you should do this. And you should go to your masters now. But I just it just wasn't clicking. And when I found out about web development, I was like, Okay, this should be easy for me to be able to catch on because I started it and I Tinker in it all the time, but it just wasn't clicking. And that kind of starts to feel like, maybe it's me. And especially when you see so many other developers out there who've been doing this for five years, 10 years, 20 years, and they make everything so easy. You start to feel like okay, maybe you're not just cut up, maybe you're not cut out for it. Maybe you're just this is not for you. And it really took me a while to realize that, okay, I'm not the only person who struggles with someone These things like, it's actually not as easy as people make it look, for some people, it may click quicker than some, but it's, if it was kind of easy, everybody would do it took me a while to get to that place.

Dan Ott  25:16  
Yeah, I think that's really important. And I mean, I'm glad to have gotten to that realization, because it comes up a lot. And I've been thinking about this, I've been thinking about this recently about how everybody is, I keep saying everybody, but lots of people learn in ways similar to you, right? Sort of on their own different courses, you know, maybe boot camps or whatever, but much different than sort of in school, right. And so, if you were going in school, you'd be in a class with other people. And you're not following 7000 people who are already experts at what you're learning. And so, you know, and I've been thinking about how to, like, approach that, right? Because, on one hand, I like following people who are, you know, domain experts in whatever it is I want to learn about, but at the same time, that that sort of pressure, external pressure, and it's not even the it's not even those, anybody's fault, right. But once you know, something, you probably like to talk about it. Right? But coming from when you don't know it, you know, it's just like you're saying, it can seem it can seem like they make it seem easy, you know, and how to how to approach that like learning process, when you're when you're starting out. How to avoid falling, falling into that trap, you know, of like, following all those people, because you're like, Okay, let's have developers to follow, you know, like, follow these different, different Twitter accounts, and, or whatever it is blog posts. And meanwhile, there's like 1000s and 1000s people in the exact same boat, you know, struggling and, you know, trying to push through everything and trying to figure out what to learn next, and they're not on all the top developers to follow lists, you know, you know what I mean? It's, I know, it's an interesting problem. And I don't have any solutions or anything, but you know, it's an interesting problem to think about. And you're not like, I just lots of people we talk to here at Virtual Coffee, on the podcast or in, you know, Virtual Coffee proper, I guess, around the table and then have the same sort of realizations, you know, that, like, it's a struggle, it's hard. It's hard to learn. And it's hard to learn anything new. And I don't know, I have been. Yep, I don't know. That's the end of my thing. I don't have any further, I don't really have a question or a statement, you know, but it's a very interesting topic to me.

Debra-Kaye  27:56  
It's something that I also realized too, like, and honestly, Virtual Coffee is the committee that has made me feel more comfortable asking questions. But it is something that I noticed too. You know, even on Twitter, right? Even if you decide to ask for some wherever you ask questions, especially as a newbie, like, I am so good at overwhelming myself with like, all the things to learn all these things. But sometimes when you ask like a really a question that you think in your head is really simple. And I mean, it's not overly complicated, but it's just, it hasn't clicked for you yet. And you may ask somebody who is an experienced developer, and they give you this really advanced answer. And, you know, you do this and you do this. And this, like, I don't even know what that is. And because they have been doing this for a while, they kind of don't really know how to explain something in like layman's terms to a beginner where it like it will connect the dots for you. And because I even I'm learning it, and I'm, like, a little bit more comfortable with it now. But as asking someone a person about it, and they gave me like, this answer was like, Oh, my god, I don't even know what to do with that. So is there any way to like, avoid that right now? Because I don't know how to do that. And I'm gonna mess up something if I try it. So it's like also realizing for yourself how you learn, and also to not try to grab everything because you need to learn everything. So I like and I mean, even when you Google stuff, too, like I said, yesterday evening, reading a blog post trying to fix something in CSS, and I read the article just like, I don't know, five minutes long, and I still didn't understand what to do. So it's it's really, it's a tricky kind of thing. Because some people we don't know how to break down the answer on your level because they've been doing it for so long, it's so natural for them. And for you, it's not really natural. So it's, it's, it's a tricky, it's a, it's like dicey. It's tricky.

Dan Ott  30:13  
It is. And it can be, it can even be not so much that they don't know how but they haven't. Like, maybe they don't know you, personally very well yet, or they don't know where you are on your journey or any person, you know. So if you're answering a question, it's hard to, like, intuitively calibrate, you know, your, your answer, you know what I mean, for a given person, other than just talking to them, which is what I do, like when I'm when I'm like, starting a pairing session with somebody who I haven't worked with before. Like, if they're, if they're trying to solve a specific problem, you know, the first questions I sort of gauge I like, I just try to gauge like, where, you know, what, like, where, what things they do know, and what things they don't, so that we can, like, talk in the language that like, both of us understand, you know, because in a couple years, you know, you're going to be, you're just gonna have all that good stuff under your belt, and you're gonna forget about how hard it was, you know? And then and your answers, if somebody asks the same question, we'll be okay, we'll just do this. And this, you know, and then it's very easy, like, because that's the process that's in your brain, right? So like, Okay, how do I do this? Oh, well, what I would what Dan would do is, you know, x y&z except if I don't have, you know, if the person doesn't know, at what x it means that answer is useless. Right? So calibrating like, trying to figure out how to how to calibrate those answers is complicated, it doesn't fit everybody, you know? Because if they're answering that good question. I don't know. Like, like, there are ways, you know, you could just write a book on pretty much any question about get, like, you know, what I mean? Like, the answer to any question on get, if you get all the way down to it is like very complicated, you know, and, and same with react, and same with JavaScript is all just a bunch of House of Cards of different, you know, different pieces of data, you know, and it's just, I feel, I feel, it's, it's, I feel, I was gonna say feel bad, it's not quite right. But like, I can understand the struggle of trying to learn all this stuff, you know, at once, all at once, you know, early, because when I learned there was none of when I was learning HTML and CSS there, like, it didn't, it didn't even exist. Yes, exactly. You know, like, I didn't have to learn git, or version control or whatever, because we were just like cobbling files up to like a server, you know, it was bad. Like, I'm glad that it exists now. But it's complicated on its own, you know, and it's this whole, this whole thing, I always try to tell people to just learn one thing at once, you know,

Debra-Kaye  32:56  
it's kind of hard to like, it's tricky, because like, on one hand, like in your head, you know, you need to focus on one thing. So you can, like be good at something. But at the same time, with tech, you kind of have to know how to do one or two things at least. So you can never really be learning one thing alone, at whatever, at one point in time, you kind of have to know how to do at least two things to go because they are they connect somehow. So it's kind of hard to just focus on one thing. So it's, and that's why people will get trapped into whole learning to three different languages at the same time. Like, I'm not even trying to learn frameworks yet. Because like, I want to get really good at JavaScript, cuz like, the advice that I keep getting is, if you get good at JavaScript, or you can handle yourself with it, then everything else will come a little bit easier. So I'm not really worried about frameworks. I kind of already know which framework I want to learn first, which is view but looks like down the road. And I probably will learn react, of course, because I noticed the demand and everything. But people will get caught up in the all in the Buddhist framework is hot right now, that is hot right now. And people will be trying to learn two, three at the same time. And then there are really an ad from what I have learned. And I'm constantly being told, like, get your basics, right. And like once you get your foundation set, then everything else will come. And I'm trying to get the foundation set. So but it's really easy to get caught up in the whole, you know, hot new thing, and also learning more than one thing at a time because tech changes so quickly, too. So it's kind of a tricky balance.

Bekah Hawrot Weigel  34:45  
It is really tricky. And I think what works for one person doesn't work for every person to write, like we've been saying. And I think, you know, sometimes jumping into a framework might be the way to go and like not mastering all those things. I know I think it was when I Went from Ruby to rails. Ruby, like I was kind of getting it. And but then I hit rails. And I was like, oh, okay, now suddenly, this makes sense. And I'm not sure what made it click, but jumping into the framework helped me to understand things a lot better than I had before. And so it was, you know, kind of this backwards way of doing things, but hearing other people say like, Oh, yeah, I've done that, too. There weren't as many people saying that there were a lot of people saying that's not the right way to go. But it there's not a right way and a wrong way. There's the way that works for you. And, you know, it's great to be able to recognize what those things are. Yeah. No, deprecate. I know, like learning on your own, I went to a boot camp. And I feel like that was challenging. I was online, and I didn't have a sense of community. But I'm sure learning on your own is maybe extra challenging, because you are trying to like, find good resources, and maybe find communities. So I, you know, can you talk a little bit about what has been most challenging for you?

Debra-Kaye  36:14  
Yeah, so I have been like trying to learn on my own well this year would make it two years. But they found that before I found Virtual Coffee, I was, I started to like, do a little rabbit hole research. But I was just like, trying to look at too many things at once. And I never had any one of I could ask questions. And I was just struggling because I would, I was going through one free boot camp. And I was even trying to do the 100 days of code thing. And if I missed the day, I would just be like, okay, I messed up, I'm gonna start over because I wasn't really consistent. And I wasn't really focused. And I had no way to talk to about what I was struggling with. So it was just difficult. So I would start and stop and start and stop. And if I did good for a week, and I missed two days, because I just was too burnt out to do it. I was like, Okay, let's start over. No, because I kind of messed it up and had no way to keep me accountable as couldn't ask the questions, I will be like, going through the bootcamp didn't understand what I was doing, and had nobody to ask and felt like, okay, it's not for me, because it's not clicking, why is it not clicking? Now get frustrated, and the frustration would just cause me to be like, okay, it's not working. And then when I would see like, someone tweet, like, Hey, I'm struggling with this. And I'm like, okay, it's not me alone. So maybe I should try again. And then I will try again, then get frustrated at some point and stop again. So that was really like actually actively looking for a community that I felt comfortable in. And when I finally found Virtual Coffee, and I was like, Oh, my god. But it really took me a while because studying on your own like, on one hand, self paced, boot camps are great. But if you have no one who is in it with you, and you have no one to ask questions, or be like, Hey, I'm not getting this is it me. And for someone to tell you that it's not you, it's actually normal to struggle through this process. And it's like a long journey. Like, I have no problem with learning forever because I constant learner. So I have no problem learning forever. Like, that's my thing. But when you have when you know that there are people who are also struggling, and can help you to get through those rough patches, and encourage you, it is not you, you're going to get it. It's okay. It's not getting it today, but you will get it Don't worry about it. And to kind of talk you out of procrastinating and talk to you all itself, talking yourself, although stuff. That's a great thing took me a while to find that space. But that was me that I was just like, up and down, up and down. Start today start next week, frustrated, okay? I have no one to talk to about it. And more so me it's not really you, it's normal and you won't get it in a month. You won't get it in a day. So it was that was really instrumental for me because I when you study on your own, it's just not. And we don't really even even without the pandemic like I don't really have anyone who like is like really Intertek or wants to learn this thing. So to find a community where You people have the same interest as you. And they actually went through it. So they kind of know what you're struggling with and understand like, hey, this was shiny for me too. Or maybe you could think about it this way, like some suggestions, anything, but just something to help you realize that it's, it's normal for you to struggle through this because the learning curve is steep, and you're not going to get it overnight.

Bekah Hawrot Weigel  40:28  
I think like That's it. That's it, right? It's normal for you to struggle through this because there's so much I don't know if I would call it imposter syndrome or whatever. doubts that comes when you're like, I'm struggling, that must mean I'm not good at this, or I'm not meant to do this. And that's not true at all. Right? we all struggle through it, or most of us.

Debra-Kaye  40:46  
 That's exactly it, like the imposter syndrome is is real. Like, I know, people talk about this, I know that there's so many articles I have read them, I have watched the videos, but when you're trying to learn something, and when you're like, why is it not easy for me? Or as easy for me? Or why is it that this person like gets it and I'm not getting it, the imposter syndrome will be like, it will tell you stuff that it will really make you procrastinate. And I spent a lot of time procrastinating too, because I just like I'm not getting it. So it's me, I'm not getting it. And then we're taught myself how to stop because this like, it's not for me, it's not cooking. So maybe I'm not cut out for this. So imposter syndrome is so real. And like, I know, maybe even last year, developers may think Oh, these your developers talk about imposter syndrome, they didn't know that I still have it. Or maybe as a senior, you may not have it as much because you have some experience. But as a junior with where and how tech is now 2021, a lot of things have changed. And you know, tools and all these things will always be coming Oh, but when you're just starting to learn something, and you have to try to get up to par with where the text base is today. And you have such a long way to go. Seniors don't really think because they have already passed that stage. And I really understand that imposter syndrome for a junior is probably even more than what they feel now, because they've been doing it for 5-10 years. So you know, you can have an idea of what you're doing. You know, you don't know everything, but you kind of know what you're doing to a point. But a junior who has no clue what they're doing, has like 1000 times the imposter syndrome, because we don't know what we're doing.

Bekah Hawrot Weigel  42:52  
I think that senior devs are just better at hiding their imposter syndrome. And like over the last year, I have been surprised at so many of our members who I would have expected to be super confident in things say that they're nervous about doing it, or they don't know if they're good enough to be doing this thing. And that was so eye opening for me because I thought like, wow, you know, they're here. They're doing great. They've had this amazing career. But it was it was just like this, this hidden thing, where I think people on this journey where a lot of us are openly talking about it, which is great. And I think that that should happen more. But it's been, you know, like we're all here in tech grows and moves so quickly that it makes sense that we frequently don't feel like we know what we're doing. Because we can't it just keeps moving.

Dan Ott  43:47  
Yeah, yeah. I mean, I I don't know, it's one of those things where it for me, I it makes sense that a person would struggle with learning, like learning to be a developer, like, for the first time, because I can't remember if I can actually remember it being very hard. You know, it's hard. And I think, as somebody who like in a senior developer role I, it's the imposter syndrome rears its head all the time, but sort of different, right? Because, like, not different. It's in different spots, right? Because I do like, I'm not like, it's more like, Okay, well, what if, I don't know, I don't know how to phrase this. Like, what if everybody finds out, you know, like, that's the thing, you know, like, it's, I'm not finding trying to find a job for the first time and I'm not trying to, like learn this whole new thing, you know, but so it's, I don't know, if it's like, just not as sharply like you were saying, like, maybe when you're learning for the first time it's, it happens more often or something and that might be true, you know? Right. Right. Right. But yeah, You know, and I feel like once you're there, and also back to what you said, we never like, it's it's the this sort of feeling, I feel like once you are more experienced, like, once you've been doing I think for a long time is a little bit more under the surface, even under your own like, like subconscious, you know, sometimes I'm like, I don't have imposter syndrome, I just embedded This is like what I say to myself, like, oh, wait a minute, that's, you know, like, those are like feelings that I have. Often even, you know, like, trying to push through these things, it still happens. I think it happens to a lot of people. And you know, some people don't talk about it, some people don't realize that it is happening or you know. And then and then some people do talk about it, but--

Debra-Kaye  45:52  
And then too, sorry, and then also, as a junior, I guess, because while you have some senior developers who are more open about talking about the imposter syndrome, and then there are others who, you know, you don't really see that, you know, they cannot make it look like Oh, I'm so good at this not been doing this for 20 years. But as a junior, because we don't really see seniors talk about that they haven't pursued and we think, you know, they're so good at this, like, they know it, because they've been doing this for so long. So we're like, when are we ever going to feel comfortable knowing enough? and be able to show that we know enough? Because and like no enough is like a relative of course, because you know, this space is like so crazy, where you know, there are always new things to learn. And I love that. But also, it's almost like, from a newbie you you kind of feel like, when will I apart from trying to actually learn the things? I'm going to do it? It's almost like, when will I ever feel like I know enough? And how can I show someone, you know, a company, a contractor, whatever, that I know enough to do this. And because we don't really see the senior developers openly showing that, hey, you kind of won't know everything, and it's okay. And you may see me here 20 years later, but I was at the same point you were and when I started, things were much different. Things have changed a lot now. So it's okay, you will get there. And you don't have to try to get to my 20 year veteran, but just get comfortable with enough things that you can do whatever you're required to do, or you know how to go about learning how to do it? Yeah,

Bekah Hawrot Weigel  47:54  
I think we were just in the book club meeting. And somebody there has been a developer for 15 years. But as a freelance developer, and one of the things they were talking about was, they don't have feedback from anyone, because they take on freelance clients. And so they don't ever really know how they're doing right. And I think that's also plays into this role of learning, especially on your own, or in a place where you're not getting feedback from people because you are kind of your own reference point. And you're you are looking like Dan was saying, you follow all these people on Twitter, right, who have been doing this for years. And so then it becomes you and these people that you're looking at, and you have no one to kind of look at what you're doing and say like, Look, you're doing a great job. And this is amazing. And hey, I didn't know that thing. And I've been doing it this long rate. And so that lack of community response or feedback can be really challenging to gauge where you are.

Debra-Kaye  48:57  
Yeah, yeah. And they did to me a while to like, connect those dots too. Because when you're learning on your own, you really don't have anyone to bypass ideas have to be like, Hey, I don't know what this means. Can you walk me through this? And also, as a new person, one of the things that I learned the hard way is asking for help. Because you don't want to look like I mean, you don't know what you're doing. But you kind of don't want anyone to know that you don't know what you're doing. So it took me a while to ask questions. And sometimes it's also a case of finding the right people to ask those questions, because not everyone will be willing to assist you. But find the right people who are willing to help and would actually encourage you to ask questions. That was a big thing for me because I don't like to ask for help. It kind of sounds weird, but you don't want to seem like you have no clue what you're doing. But you also what I've learned is that It is better to ask questions than to sit there and struggle and you know, doing the wrong thing, and you have no idea that you're doing the wrong thing, or you're going about it the wrong way. So asking for help is really important. And when you find a great community that you can ask for help, or the person that that you know, who is willing to assist you. And they will actually walk you through something, you realize, Oh, so I kind of got a but I just went wrong, right here. Or I could think about it this way. So asking practice are really is a really big thing. But new people are suppose as newbies, we don't like to ask for help, because we just don't want to look like we have no clue what we're doing. We don't but we don't want anyone to know that. So, yeah, that's my focus really, really a big thing, too.

Dan Ott  50:54  
Yeah. I mean, I don't really have anything to add, other than I love that if I think it's great advice. I think asking questions is important. And I think it's a burden for everybody at every level, you know, but just like you're saying, you know, you're saying you didn't want to, I don't know, appear like you didn't know anything, or whatever. But the fact that you're working on anything, have a question to ask even as evidence enough, that, that you that you do know, things, you know what I mean? And I don't know, it's, it's possible to struggle through everything all by yourself, you know, it is possible, but it's much easier with, with people, and it's not even just like learning how to be a dev or whatever, you know, any problem you're struggling with, you know, is, is at some point going to be better if you can get somebody else to, like, look at it, or, you know, talk through your, your mental process, or whatever it is, you know, asking questions is just, it's just such a useful tool, you know, an important important thing to keep in mind.

Bekah Hawrot Weigel  51:56  
Yeah, I think, to go along with that, you call it a useful tool. And I think that's a good way to frame it, right, because it is something that we need to develop. And it's something that we need to use often. And I think if you could learn that while you're learning, it's so important, because it took me a lot longer to learn about asking questions, and when to ask questions. for a lot of reasons you said, Debra-Kaye, you know, I was like working, but I didn't want anybody to think I didn't know what I was doing. And so then I just like, I don't know, I was trying to, you know, carve a mountain and no that I was just gonna go and do this analogy. And it's just not not gonna work.=

Bekah Hawrot Weigel  52:41  
So the point is, ask questions early.

Dan Ott  52:47  
No, no, I want to know what it was. 

Bekah Hawrot Weigel  52:52  
Like, I can see the image in my head too, of like, where it was going and how it would play out.It looks cool, but doesn't translate.

Dan Ott  53:06  
There's a podcast, I listened to that. They've built up this very complicated metaphor for like brain processes. And like it's, it's it's a it's a, it's complicated, and they built it up in like, the first couple episodes, and then they just use it the rest of the time. And so they're like, referring to these weird things. Like, I think if you jump in the middle of like, if you just listen to the most recent podcast episode, you have no idea what they're talking about. But I

Bekah Hawrot Weigel  53:35  
-- that's what I was trying to avoid. Exactly. Okay, so we're like, trying to see what we have. We're just about at time. So I just want to know before, I don't want to wrap up if there's something else that you want to talk about. So if there's anything else that you want to cover, we can go ahead.

Debra-Kaye  54:02  
No, I mean, I just want to say that I encourage people to play me encouraging someone to ask questions and to not be afraid to put yourself out there that took me a long time to get comfortable doing that. still working on it. But you have to get to a point where you're willing to take a little tiny step and ask a question and ask for help and share something that you think you don't know, but can actually help someone else. And it took me a long time to get there. Because I even like just started blogging, not just started but last year, late last year, and I was like, you know how to write about tech and I don't know anything about tech, but I've just been like trying to write about My experience in learning my learning journey, and the way that I saw it resonate with other people. I was like, No, some are the only one who feels this way. Cool. And that kind of helps show me that I'm not alone in in the struggle, and like, I knew I was ventually getting, but when I saw other people responding like, this is me to a team and was like, Okay, cool. So it's not only me, that's really cool. Like, that was like the highlight of my day when I read that feedback. Like, okay, cool. That means I'm on the right track. It's not only me, this is kind of cool.

Dan Ott  55:42  
Yeah, I love that. I, I don't know, that's always a piece of advice I give to everybody to is is writing at any point, any point in your in your journey, you know what I mean? But like the those, it's so valuable to share those experiences, you know, I get appreciate it down the road to when, when you're, you know, was an old developer who's been around the road and, you know, reading back, I mean, I mean, I had I have blog posts from, you know, early in my career, I guess, but they're not. I was in college when I was learning for the first time, I was still on my own. I wasn't learning in college. But But like, I didn't mean, I wasn't writing any of this down. And I do wish I had even just for myself records, you know, of this sort of thing. I think it's I think it's very cool. And a very good idea. for a lot of reasons.

Debra-Kaye  56:36  
Yeah. Someone wrote a blog post about that. I think it was I can't remember if it was swyx, on Twitter, Shawn, somebody who I think it was him, but just the idea of like documenting your journey, because not really for anyone's benefit, per se, but for your own benefit. Because I've seen a lot of developers see that the maybe solve a problem. And they wrote about it. And then when they forgot how to do it, they would search and find by their own blogs and be like, Oh, actually, what about this, to remind themselves how to do that thing or help solve that problem. So I and I like to write and but I'm always something like what I write about. So like, my job is always what am I What am I going to write about? Because I don't know it yet. But writing is something that I definitely want to continue when, like, have it be a part of my thing, because I always did like to write I did my blog before but not tech blogs. Because I always had the thinking that I have to actually be an expert in it before I can write about it. So and that's why I always procrastinated on trying to blog because I'm like, I don't know enough to write about it yet. So what am I going to write? Yeah. So it's, it's it's a it's a journey.

Bekah Hawrot Weigel  58:05  
That's for sure. Okay, you have given us so much great information. And thank you so much for being with us here today. We are very excited to be able to share this. Thank you.

Debra-Kaye  58:15  
Thank you for having me. This was great. This was fun. 

Bekah Hawrot Weigel  58:20  
All right. Well, we will talk to you soon. Bye.

Debra-Kaye  58:24  
 Bye.

Bekah Hawrot Weigel  58:28  
Thank you for listening to this episode of the Virtual Coffee podcast. This episode was produced by Dan Ott and Bekah Hawrot Weigel, and edited by Dan Ott. If you have questions or comments, you can hit us up on Twitter at @VirtualCoffeeIO. Or you can email us at podcast at Virtual coffee.io. You can find the show notes. Plus you can sign up for our newsletter to find out what Virtual Coffee has been up to on our website at Virtualcoffee.io.

Dan Ott  58:57  
Please subscribe to our podcast and be sure to leave us a review. Thanks for listening and we'll see you next week.

